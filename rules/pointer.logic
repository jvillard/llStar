/**********************************************
 * Generally useful rules about getelementptr 
 *************************************/

rewrite pointer_getelementptr0:
  eltptr(?p,pointer_type(?t),jump(NULL(),?j))
  = eltptr(?p,?t,?j)

rewrite pointer_getelementptr_void:
  eltptr(?p,pointer_type(integer_type("8")),jump(?n,?j))
  = eltptr(bvadd.64(?p,?n),pointer_type(integer_type("8")),?j)

rewrite jump_end:
  eltptr(?y,?t,jump_end()) = ?y

rewrite pointer_getelementptr_array:
  eltptr(?x,array_type(?s,?t),jump(?n,?j))
  = eltptr(bvadd.64(?x,bvmul.64(sizeof(?t),?n)),?j)

/*************************************
 * Simple subtraction rules 
 *************************************/

rule ptr_same_root_same_type:
 | pointer(?x,?t,?v) |- pointer(?x,?t,?w)
without
 ?w != ?v
if
 pointer(?x,?t,?v) | |- ?w = ?v

rule remove_malloced:
 | malloced(?mb,?n) |- malloced(?mb,?m)
without
 ?n != ?m
if
 malloced(?mb,?n) | |- ?n = ?m


/*************************************
 * rules for contradictions 
 *************************************/

/*
  If we have an assumption of a pointer
  for null then we have a contradiction.
 */
rule pointer_nil_contradiction:
  pointer(NULL(),?t,?v) | |- 
if

/* same for malloc */
rule malloced_nil_contradiction: 
  malloced(NULL(),?s) | |- 
if


/**************************************
 *  Rules for failed proofs
 **************************************/

/*
  If we need to prove that pointer exists for null
  then we are going to fail, unless we can find 
  a contradiction.
 */
rule pointer_nil_failed :
  | |- pointer(NULL(),?t,?v) 
if
  | |- pointer(NULL(),?t,?v) * False

rule pointer_not_null :
  pointer(?x,?t,?v) | |- ?x!=NULL()
if
  pointer(?x,?t,?v) | |-
